/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import { StcChip as StcChip } from './components/chip/chip';

interface HTMLStcChipElement extends StcChip, HTMLElement {
}
declare var HTMLStcChipElement: {
  prototype: HTMLStcChipElement;
  new (): HTMLStcChipElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "stc-chip": HTMLStcChipElement;
  }
  interface ElementTagNameMap {
      "stc-chip": HTMLStcChipElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "stc-chip": JSXElements.StcChipAttributes;
      }
  }
  namespace JSXElements {
      export interface StcChipAttributes extends HTMLAttributes {
        
          id?: any,
          image?: any,
          text?: any,
          closeable?: boolean | "true" | "false"
      }
  }
}

import { StcTabContent as StcTabContent } from './components/tabs/tab-content';

interface HTMLStcTabContentElement extends StcTabContent, HTMLElement {
}
declare var HTMLStcTabContentElement: {
  prototype: HTMLStcTabContentElement;
  new (): HTMLStcTabContentElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "stc-tab-content": HTMLStcTabContentElement;
  }
  interface ElementTagNameMap {
      "stc-tab-content": HTMLStcTabContentElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "stc-tab-content": JSXElements.StcTabContentAttributes;
      }
  }
  namespace JSXElements {
      export interface StcTabContentAttributes extends HTMLAttributes {
        
          getChild?: any,
          name?: any
      }
  }
}

import { StcTabHeader as StcTabHeader } from './components/tabs/tab-header';

interface HTMLStcTabHeaderElement extends StcTabHeader, HTMLElement {
}
declare var HTMLStcTabHeaderElement: {
  prototype: HTMLStcTabHeaderElement;
  new (): HTMLStcTabHeaderElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "stc-tab-header": HTMLStcTabHeaderElement;
  }
  interface ElementTagNameMap {
      "stc-tab-header": HTMLStcTabHeaderElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "stc-tab-header": JSXElements.StcTabHeaderAttributes;
      }
  }
  namespace JSXElements {
      export interface StcTabHeaderAttributes extends HTMLAttributes {
        
          getChild?: any,
          name?: any
      }
  }
}

import { StcTabs as StcTabs } from './components/tabs/tabs';

interface HTMLStcTabsElement extends StcTabs, HTMLElement {
}
declare var HTMLStcTabsElement: {
  prototype: HTMLStcTabsElement;
  new (): HTMLStcTabsElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "stc-tabs": HTMLStcTabsElement;
  }
  interface ElementTagNameMap {
      "stc-tabs": HTMLStcTabsElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "stc-tabs": JSXElements.StcTabsAttributes;
      }
  }
  namespace JSXElements {
      export interface StcTabsAttributes extends HTMLAttributes {
        
      }
  }
}

import { StcTagsComponent as StcTags } from './components/tags/tags';

interface HTMLStcTagsElement extends StcTags, HTMLElement {
}
declare var HTMLStcTagsElement: {
  prototype: HTMLStcTagsElement;
  new (): HTMLStcTagsElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "stc-tags": HTMLStcTagsElement;
  }
  interface ElementTagNameMap {
      "stc-tags": HTMLStcTagsElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "stc-tags": JSXElements.StcTagsAttributes;
      }
  }
  namespace JSXElements {
      export interface StcTagsAttributes extends HTMLAttributes {
        
          tags?: any,
          placeholder?: any
      }
  }
}

